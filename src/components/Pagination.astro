---
interface Props {
	currentPage: number;
	totalPages: number;
	baseUrl?: string;
}

const { currentPage, totalPages, baseUrl = '' } = Astro.props;

// Generate page numbers to display
function getPageNumbers(current: number, total: number) {
	const pages = [];
	const showPages = 5; // Show 5 page numbers at most
	
	if (total <= showPages) {
		// Show all pages if total is small
		for (let i = 1; i <= total; i++) {
			pages.push(i);
		}
	} else {
		// Always show first page
		pages.push(1);
		
		let start = Math.max(2, current - 1);
		let end = Math.min(total - 1, current + 1);
		
		// Add ellipsis after first page if needed
		if (start > 2) {
			pages.push('...');
		}
		
		// Add middle pages
		for (let i = start; i <= end; i++) {
			pages.push(i);
		}
		
		// Add ellipsis before last page if needed
		if (end < total - 1) {
			pages.push('...');
		}
		
		// Always show last page if more than 1 page
		if (total > 1) {
			pages.push(total);
		}
	}
	
	return pages;
}

const pageNumbers = getPageNumbers(currentPage, totalPages);
---

{totalPages > 1 && (
	<nav class="pagination" aria-label="Pagination Navigation">
		<div class="pagination-container">
			<!-- Previous Button -->
			{currentPage > 1 ? (
				<a 
					href={currentPage === 2 ? `${baseUrl}/` : `${baseUrl}/page/${currentPage - 1}`}
					class="pagination-btn pagination-prev"
					aria-label="Go to previous page"
				>
					<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<polyline points="15,18 9,12 15,6"/>
					</svg>
					Previous
				</a>
			) : (
				<span class="pagination-btn pagination-prev disabled">
					<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<polyline points="15,18 9,12 15,6"/>
					</svg>
					Previous
				</span>
			)}

			<!-- Page Numbers -->
			<div class="pagination-numbers">
				{pageNumbers.map((page) => (
					page === '...' ? (
						<span class="pagination-ellipsis">...</span>
					) : page === currentPage ? (
						<span class="pagination-number current" aria-current="page">
							{page}
						</span>
					) : (
						<a 
							href={page === 1 ? `${baseUrl}/` : `${baseUrl}/page/${page}`}
							class="pagination-number"
							aria-label={`Go to page ${page}`}
						>
							{page}
						</a>
					)
				))}
			</div>

			<!-- Next Button -->
			{currentPage < totalPages ? (
				<a 
					href={`${baseUrl}/page/${currentPage + 1}`}
					class="pagination-btn pagination-next"
					aria-label="Go to next page"
				>
					Next
					<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<polyline points="9,18 15,12 9,6"/>
					</svg>
				</a>
			) : (
				<span class="pagination-btn pagination-next disabled">
					Next
					<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<polyline points="9,18 15,12 9,6"/>
					</svg>
				</span>
			)}
		</div>

		<!-- Page Info -->
		<div class="pagination-info">
			<span>Page {currentPage} of {totalPages}</span>
		</div>
	</nav>
)}

<style>
	.pagination {
		margin-top: 60px;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 20px;
	}

	.pagination-container {
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.pagination-btn {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 12px 16px;
		background: #ffffff;
		border: 2px solid #e0e0e0;
		border-radius: 8px;
		text-decoration: none;
		color: #000000;
		font-weight: 500;
		font-size: 14px;
		transition: all 0.2s ease;
		min-width: 100px;
		justify-content: center;
	}

	.pagination-btn:hover:not(.disabled) {
		border-color: #0066FF;
		color: #0066FF;
		transform: translateY(-1px);
		box-shadow: 0 2px 10px rgba(0, 102, 255, 0.1);
	}

	.pagination-btn.disabled {
		color: #cccccc;
		cursor: not-allowed;
		border-color: #f0f0f0;
	}

	.pagination-numbers {
		display: flex;
		align-items: center;
		gap: 4px;
		margin: 0 16px;
	}

	.pagination-number {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		border-radius: 8px;
		text-decoration: none;
		color: #000000;
		font-weight: 500;
		font-size: 14px;
		transition: all 0.2s ease;
		border: 2px solid transparent;
	}

	.pagination-number:hover {
		background: #f8f9fa;
		border-color: #e0e0e0;
	}

	.pagination-number.current {
		background: #0066FF;
		color: #ffffff;
		border-color: #0066FF;
		cursor: default;
	}

	.pagination-ellipsis {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		color: #666666;
		font-weight: 500;
	}

	.pagination-info {
		color: #666666;
		font-size: 14px;
		font-weight: 500;
	}

	@media (max-width: 768px) {
		.pagination-container {
			flex-wrap: wrap;
			justify-content: center;
		}

		.pagination-btn {
			min-width: 80px;
			padding: 10px 12px;
			font-size: 13px;
		}

		.pagination-numbers {
			margin: 0 8px;
			order: 3;
			flex-basis: 100%;
			justify-content: center;
			margin-top: 12px;
		}

		.pagination-number {
			width: 36px;
			height: 36px;
			font-size: 13px;
		}
	}

	@media (max-width: 480px) {
		.pagination {
			margin-top: 40px;
		}

		.pagination-btn {
			min-width: 70px;
			padding: 8px 10px;
			font-size: 12px;
		}

		.pagination-number {
			width: 32px;
			height: 32px;
			font-size: 12px;
		}

		.pagination-info {
			font-size: 13px;
		}
	}
</style>